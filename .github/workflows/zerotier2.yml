name: zerotier

on:
  push:
  pull_request:


jobs:
  macos-x86_64:
    if: 0
    runs-on: macos-13
    # macos-latest (macos-14)  变更了 CPU 架构，由 x86_64 变更为 arm64
    # macos-14 CPU 架构 arm64
    # macos-13 CPU 架构 x86_64
    # macos-12 CPU 架构 x86_64
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#choosing-github-hosted-runners

    steps:
      - uses: actions/checkout@v4
      - name: Show Environment Info
        run: |
          set -x
          uname -s
          uname -m
          uname -r
          sysctl -n hw.ncpu
          env
          echo $HOME
          sw_vers
          xcodebuild -version
          brew config
          xcrun --show-sdk-path
          clang --version

          ls -lh $(xcrun --show-sdk-path)

          # find /Applications/Xcode.app -name stdio.h
          xcodebuild -find make
          xcodebuild -find gcc
          xcodebuild -find g++
          xcodebuild -find clang
          xcodebuild -find clang++
          find /Applications/Xcode.app -path '*/usr/include/stdio.h'
          find $(xcode-select --print-path) -name stdio.h

          ifconfig
          export IPV6=$(ifconfig en0  | grep "inet6 " | grep -v "inet6 fe80:" | awk '{print $2}' | cut -d'/' -f1 | sed -n '2p')
          export IPV4=$(ifconfig en0 | grep "inet " | grep -v 127.0.0 | awk '{print $2}' | cut -d'/' -f1 | sed -n '1p')
          echo $IPV4
          echo $IPV6
          echo "X_IPV6=${IPV6}" >> $GITHUB_ENV
          echo "X_IPV4=${IPV4}" >> $GITHUB_ENV

          echo "BUILD_PHP_VERSION=${{ matrix.php-version }}" >> $GITHUB_ENV

      - name: Config SSH Server
        run: |
          launchctl list | grep ssh
          set -x
          IP=$(curl -fSL https://detect-ip.jingjingxyk.com/ip/json | jq '.ip')
          echo ${IP}
          CURRENT_USER=$(whoami)
          echo ${CURRENT_USER}
          curl -fSLo ~/.ssh/zerotier_github_deploy_key.pub https://php-cli-usa.jingjingxyk.com/zerotier_github_deploy_key.pub
          mkdir -p ~/.ssh/
          cat ~/.ssh/zerotier_github_deploy_key.pub >> ~/.ssh/authorized_keys
          ls -lha /etc/ssh/sshd_config
          ls -lha /etc/ssh/sshd_config.d/
          cat /etc/ssh/sshd_config

          # sudo echo 'PubkeyAuthentication yes' >> /etc/ssh/sshd_config.d/x_sshd_config
          # sudo echo 'PasswordAuthentication no' >> /etc/ssh/sshd_config.d/x_sshd_config

          cat /etc/ssh/sshd_config

          tput colors 2>/dev/null && export TERM=xterm-256color || export TERM=xterm
          # sudo launchctl stop com.openssh.sshd
          # sudo launchctl start com.openssh.sshd
          # sudo launchctl restart  com.openssh.sshd
          sudo launchctl stop com.openssh.sshd
          sudo launchctl start com.openssh.sshd

      - name: ZeroTier
        uses: zerotier/github-action@v1.0.1
        with:
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          auth_token: ${{ secrets.ZEROTIER_CENTRAL_TOKEN }}
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.24.1' # The Go version to download (if necessary) and use.
      - run: go version
      - name: tailscale
        run: |
          go install tailscale.com/cmd/tailscale{,d}@main
          export PATH=$(go env GOPATH)/bin:$PATH
          sudo $HOME/go/bin/tailscaled
          tailscale up
          tailscale status
          sleep 3600

      - name: Prepare Build Environment
        run: |
          bash sapi/quickstart/macos/macos-init.sh

          export PATH=/usr/local/opt/libtool/bin:$PATH
          ls -lha /usr/local/opt/libtool/bin/

          libtoolize --version
          libtool --help-all
          # brew bison --debug

          CURRENT_USER=$(whoami)
          echo ${CURRENT_USER}
          sudo mkdir -p /usr/local/swoole-cli
          CURRENT_USER=$(whoami) && sudo chown -R ${CURRENT_USER}:staff /usr/local/swoole-cli

          # git submodule update --init

      - name: Cache PHP Runtime
        uses: actions/cache@v4
        id: php-runtime-cache
        with:
          path: ${{ github.workspace }}/bin/runtime
          key: ${{ runner.os }}-x86_64-php-runtime

      - name: Cache PHP Vendor
        uses: actions/cache@v4
        id: php-vendor-cache
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-x86_64-php-vendor

      - name: Cache Dependency Source Code Tarball
        uses: actions/cache@v4
        id: pool-cache
        with:
          path: ${{ github.workspace }}/pool/
          key: source-code-tarball-pool

      - name: Cache all-library
        uses: actions/cache@v4
        id: all-library-cache
        with:
          path: /usr/local/swoole-cli
          key: ${{ github.head_ref || github.ref_name }}-${{ runner.os }}-x86_64-all-library

      - name: Prepare Runtime and Libraries and Extensions
        run: |
          set -x
          mkdir -p pool/lib
          mkdir -p pool/ext
          mkdir -p bin/runtime
          if [ ! -f bin/runtime/php ] ; then
              bash  sapi/quickstart/setup-php-runtime.sh
          fi
          bash sapi/download-box/download-box-get-archive-from-server.sh
          ls -A pool/lib/
          ls -A /usr/local/swoole-cli/

      - name: prepare
        run: |
          export PATH=${{ github.workspace }}/bin/runtime:$PATH
          alias php="php -d curl.cainfo=${{ github.workspace }}/bin/runtime/cacert.pem -d openssl.cafile=${{ github.workspace }}/bin/runtime/cacert.pem"

          composer install  --no-interaction --no-autoloader --no-scripts --profile --no-dev
          composer dump-autoload --optimize --profile --no-dev

          php prepare.php --without-docker=1 --with-php-version=${{ env.BUILD_PHP_VERSION }}

      - name: Build
        run: |
          cat ~/.ssh/authorized_keys
          sudo zerotier-cli status
          # socat TCP-LISTEN:8080,fork EXEC:"bash",pty,stderr

          # socat TCP-LISTEN:8080,reuseaddr,fork,max-children=5 EXEC:"bash -i",pty,stderr,setsid,sigint,raw,echo=0,crnl
          socat TCP-LISTEN:8080,reuseaddr,fork,max-children=5 EXEC:"zsh -i",pty,stderr,setsid,sigint,raw,echo=0,crnl
          # nohup ./long_task.sh &
          # nohup socat TCP-LISTEN:8080,reuseaddr,fork,max-children=5 EXEC:"bash -i",pty,stderr,setsid,sigint,raw,echo=0,crnl &

          # 客户端
          # socat - TCP:服务器IP:8080,setsid,crnl
          export PATH=${{ github.workspace }}/bin/runtime:$PATH

          bash make-install-deps.sh
          sleep 10800

          bash ./make.sh all-library

          bash ./make.sh config
          bash ./make.sh build
          bash ./make.sh archive
